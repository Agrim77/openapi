-----EMAIL DROP DOWNS----

              <!-- <div class="mb-3">
                <label for="user_country" class="form-label">Your Country:</label>
                <select name="user_country" id="user_country" class="form-control" required>
                  <% countries.forEach(country => { %>
                    <option id="" data-country-code="<%= country.isoCode %>" value="<%= country.name %>"><%= country.name %></option>
                  <% }); %>
                </select>
              </div> -->
        
              <!-- <div class="mb-3">
                <label name="user_city" for="user_city" class="form-label">Your City:</label>
                <select id="city-select" class="form-control" required>
                  <option value="">Select City</option>
                </select>
              </div> -->

-----thanks --------
<div class="dropdown-container">
        <div class="btn-group dropstart">
          <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
            Select Your Question
          </button>
          <ul class="dropdown-menu dropdown-menu-lg-start">
            <% for (let i = 0; i < result.length; i++) { %>
              <li>
                <a class="dropdown-item" href="#question<%= i %>"><%= i+1 %>: <%= result[i].ques.substring(0, 27) %> ....</a>
              </li>
              <% } %>
          </ul>
        </div>
      </div>


<div class="dash_section4">
        <% for (let i = 0; i < result.length; i++) { %>
          <div class="qs hidden1" id="question<%=i%>">
              <div class="question">
                <div class="question_area"><h4><pre><%= i+1 %>: <%= result[i].ques %>
                    </pre></h4>
                </div>
                <div class="question_click">
                    <i class="fa-solid fa-circle-plus" style="color: #5794ff;" onclick="toggleAnswer(`<%- i %>`);"></i>
                  </div>
              </div>  
              <pre id="answer<%=i%>" class="answer_text" ><%-result[i].ans %></pre>
          </div>
      </div>
---email----
const transporter = nodemailer.createTransport({
    host: 'smtp.ethereal.email',
    port: 587,
    auth: {
        user: 'merlin.romaguera12@ethereal.email',
        pass: 'MWVqaM1Cc5yzFyHtRw'
    }
});

SMTP configuration
Host	smtp.ethereal.email
Port	587
Security	STARTTLS
Username	merlin.romaguera12@ethereal.email
Password	MWVqaM1Cc5yzFyHtRw
IMAP configuration
Host	imap.ethereal.email
Port	993
Security	TLS
Username	merlin.romaguera12@ethereal.email
Password	MWVqaM1Cc5yzFyHtRw
POP3 configuration
Host	pop3.ethereal.email
Port	995
Security	TLS
Username	merlin.romaguera12@ethereal.email
Password	MWVqaM1Cc5yzFyHtRw

-----MODEL EXAMPLES OF JD & CV FOR MODEL TESTING--

const jd = `Selected intern's day-to-day responsibilities include 1. Building data and logic-driven web-based workflow systems using bubble.io 2. Working with custom coding 3. Debugging and testing the code 4. Documenting and testing 5. Working with the different data sources, SDKs, and APIs Requirements: 1. Strong analytical skills 2. Excellent coding skills 3. A good foundation in algorithms and data structures 4. Exposure to any HTML/CSS/Node.js/React/MongoDB/Postgres/APIs etc. 5. Attention to detail 6. Passion for excellence 7. B. Tech/BE from good institutes 8. Above-average academic performance 9. Aspiring full-stack developer 10. Past experience in real-world and academic projects is preferred
`;
const cv = `Past Experience: 
Company Name: Edioper+ Solutions I had experience developing web applications using various web stacks and technologies such as NodeJS and React, catering mostly to clients in the education sector. My skills include creating responsive full-stack websites from wireframes.
and personal projects :DISTORT: Discord UI clone project with real-time chat functionality and google Auth using firebase (for backend also), utilizing Redux for different channels and react components state management. MATCHER : Full-stack MERN project with Node, Express, and MongoDB (Mongoose) for backend and React for frontend. Deployed on Firebase with Axios for backend-frontend connection, and Heroku for environmental variable protection. Bugs resolved using React Developer tools. ALL_CRYPTO: Multipage responsive website showcasing cryptocurrencies and their details, news, in a user friendly graph and cards like fashion. Fixed switch to router (react router) and chartJs 'category') bug.
Skills: MongoDB, Express, ReactJs, Nodejs, html ,css , JavaScript,  Java, Data Structures and algorithms, React Redux, tailwind css, Authentication via google auth
Achievements: Leetcode DSA 300+ questions, Hackerrank SQL certified;`;

-----SUCCESS.EJS------
 <pre><%- unescape(result[i].ans.replace(/\r?\n|\r/g, '<br>')) %></pre>

Using pre and code syntax
            <pre><code><%- unescape(result[i].ans.replace(/<br>/g, '\n').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '"').replace(/&amp;/g, '&').replace(/&nbsp;/g, ' ').replace(/</g, '&lt;').replace(/>/g, '&gt;')) %></code></pre>

-----original header.ejs target
<link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css"
      integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p"
      crossorigin="anonymous"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Koulen&family=Lato:wght@300;400;700;900&display=swap"
      rel="stylesheet"
    />

    <link rel="stylesheet" href="/style.css" />

Selected intern's day-to-day responsibilities include 1. Building data and logic-driven web-based workflow systems using bubble.io 2. Working with custom coding 3. Debugging and testing the code 4. Documenting and testing
5. Working with the different data sources, SDKs, and APIs

Requirements:

1. Strong analytical skills
2. Excellent coding skills
3. A good foundation in algorithms and data structures
4. Exposure to any HTML/CSS/Node.js/React/MongoDB/Postgres/APIs etc.
5. Attention to detail
6. Passion for excellence
7. B. Tech/BE from good institutes
8. Above-average academic performance
9. Aspiring full-stack developer
10. Past experience in real-world and academic projects is preferred


const prv_exp = 
Company Name: Edioper+ Solutions
I had experience developing web applications using various web stacks and technologies such as NodeJS
and React, catering mostly to clients in the education sector. My skills include creating responsive full-stack
websites from wireframes.


const projects = 
DISTORT: 
Diiscord UI clone project with real-time chat functionality and google Auth using firebase (for
backend also), utilizing Redux for different channels and react components state management.

MATCHER :
Full-stack MERN project with Node, Express, and MongoDB (Mongoose) for backend and
React for frontend. Deployed on Firebase with Axios for backend-frontend connection, and
Heroku for environmental variable protection. Bugs resolved using React Developer tools.

ALL_CRYPTO:
Multipage responsive website showcasing cryptocurrencies and their details, news, in a user
friendly graph and cards like fashion. Fixed switch to router (react router) and chartJs
'category') bug.


//   const questionPattern = /Question\s+(\d+)\s+:\s+([\s\S]*?)(?:\s+Answer\s+\d+\s+:\s+([\s\S]*?))?/g;

// let match;
// while ((match = questionPattern.exec(inputText)) !== null) {
//   const questionNumber = match[1];
//   const question = match[2].trim();
//   const answer = match[3] ? match[3].trim() : '';
//   questions.push({
//     [`Question ${questionNumber}`]: question,
//     [`Answer ${questionNumber}`]: answer,
//   });
// }
  // const questionPattern = /Question\s+(\d+)\s+:\s+([\s\S]*?)(?:\s+Answer\s+(\d+)\s+:\s+([\s\S]*?))?/g;
  // const questionPattern = /Question\s+(\d+)\s+:\s+([\s\S]*?)(?:\s+Answer\s+\d+\s+:\s+([\s\S]*?))?/g;

  // let match;
  // while ((match = questionPattern.exec(inputText)) !== null) {
  //   const questionNumber = match[1];
  //   const question = match[2].trim();
  //   const answerNumber = match[3] ? match[3] : '';
  //   const answer = match[4] ? match[4].trim() : '';
  //   questions.push({
  //     [`Question ${questionNumber}`]: question,
  //     [`Answer ${answerNumber}`]: answer,
  //   });
  // }
  
  // const questionPattern = /Question (\d+): (.+)(?:\n\s+Answer \d+: (.+))?/g;
//   const questionPattern = /Question\s*(\d+)\s*:\s*(.+?)(?:\s*Answer\s*(\d+)\s*:\s*(.+))?/gs;


// let match;
// while ((match = questionPattern.exec(inputText)) !== null) {
//   const questionNumber = match[1];
//   const question = match[2].trim();
//   const answer = match[3] ? match[3].trim() : '';
//   questions.push({
//     [`Question ${questionNumber}`]: question,
//     [`Answer ${questionNumber}`]: answer,
//   });


// }